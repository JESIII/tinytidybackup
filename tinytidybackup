#!/bin/bash
#
# John Scales
# johnscales@csu.fullerton.edu
# CPSC 254-01
#
# Tiny Tidy Backup is a script that backs up a specified folder every day at 2:30am and keeps
# only a specified amount 'c' of backups and checksums.
# It can do backups locally and to a remote ssh server.
#
function usage () {
  echo "Usage:"
  echo "  ./tinytidybackup source destination"
  echo "  Options:"
  echo "  -v : verbose mode"
  echo "  -r : remote mode (./tinytidybackup -r user@remotehost:~/fully/qualified/path source"
  echo "  -n : dry run to test if it's working"
  echo "  -h : help"
  echo "  -c : number of backups to retain (default = 10)"
}
function helpfxn(){
  echo "Examples (v is for verbose mode, you can remove it if you want):"
  echo  Remote with specified num backups:
  echo "       ./tinytidybackup -vc 3 -r remote@host:~/path source"
  echo
  echo  Remote with default num backups:
  echo "       ./tinytidybackup -vr remote@host:~/path source"
  echo
  echo  Local with specified num backups:
  echo "       ./tinytidybackup -vc 3 source destination"
  echo
  echo  Local with default num backups:
  echo "       ./tinytidybackup -v source destination"
  echo
  exit
}
timestamp=`date +%F`'-'`date +%H`'-'`date +%M`
ttbloc=`pwd`
c="false"
#
# Main
#
args=`getopt nr:c:vh $*`
r="false"
v="false"
SCRIPTNAME=`basename ${0}`
NUMBACKUPS=10
if [ ${#} -lt 1 ]; then
  usage ${SCRIPTNAME}
  exit
fi

set -- $args
while :; do
  case "$1" in
  -v)
    echo Verbose Mode On
    v="true"
    shift
    ;;
  -r)
    echo Remote upload to ${2}
    SSHPATH=${2}
    SSHDEST=${SSHPATH##*:}
    REMOTE=${SSHPATH%%:*}
    r="true"
    shift; shift
    ;;
  -c)
    NUMBACKUPS=${2}
    c="true"
    echo Number of backups: $NUMBACKUPS
    shift; shift
    ;;
  -n)
    DRYRUN="YES"
    echo ${DRYRUN} this is a dry run.
    shift
    ;;
  -h)
    helpfxn
    shift
    ;;
  --)
    shift; break
    ;;
  esac
done
echo Welcome to Tiny Tidy Backup!
echo "Start backup at: "`date`
SRC="${1}"
SRCBASE=`basename "${1}"`
DEST="${2}"
filename=${timestamp}-${SRCBASE}
echo Source: ${1}
echo Destination: ${2} ${SSHDEST}
if [ ${r} = "true" ]; then
  if [ ${v} = "true" ]; then
    #echo new cron into cron file
    crontab -l > mycron
    if [ ${c} = "true" ]; then
      echo "30 2 * * * '${ttbloc}/tinytidybackup' -vc $NUMBACKUPS -r $SSHPATH $SRC" >> mycron
    else
      echo "30 2 * * * '${ttbloc}/tinytidybackup' -vr $SSHPATH $SRC" >> mycron
    fi
    #install new cron file
    crontab mycron
    rm mycron
    sshcmd="ssh $REMOTE "
    tar -cvjf - ${SRC} | ssh $REMOTE "dd of=${filename}.tar.bz2"
    $sshcmd mv ${filename}.tar.bz2 ${SSHDEST}
    $sshcmd "cd $SSHDEST && sha256sum ${filename}.tar.bz2 >> ${SSHDEST}/SHA256SUMS.txt"

    curbacks=`$sshcmd wc -l ${SSHDEST}/SHA256SUMS.txt | awk '{ print $1 }'`
    if [ $curbacks -gt $NUMBACKUPS ]; then
      delfile=`$sshcmd "head -n 1 $SSHDEST/SHA256SUMS.txt"`
      delfile=`echo $delfile | cut -d' ' -f2`
      echo Deleting: $delfile
      $sshcmd "rm ${SSHDEST}/${delfile}"
    fi
    $sshcmd "tail -n $NUMBACKUPS ${SSHDEST}/SHA256SUMS.txt > ${SSHDEST}/tmp.txt"
    $sshcmd "cat ${SSHDEST}/tmp.txt > ${SSHDEST}/SHA256SUMS.txt"
    $sshcmd "rm ${SSHDEST}/tmp.txt"
    echo Check Sum:
    $sshcmd "tail -n 1 ${SSHDEST}/SHA256SUMS.txt"
  else
    #echo new cron into cron file
    crontab -l > mycron
    if [ ${c} = "true" ]; then
      echo "30 2 * * * '${ttbloc}/tinytidybackup' -c $NUMBACKUPS -r $SSHPATH $SRC" >> mycron
    else
      echo "30 2 * * * '${ttbloc}/tinytidybackup' -r $SSHPATH $SRC" >> mycron
    fi
    #install new cron file
    crontab mycron
    rm mycron
    sshcmd="ssh $REMOTE "
    tar -cjf - ${SRC} | ssh $REMOTE "dd of=${filename}.tar.bz2"
    $sshcmd mv ${filename}.tar.bz2 ${SSHDEST}
    $sshcmd "cd $SSHDEST && sha256sum ${filename}.tar.bz2 >> ${SSHDEST}/SHA256SUMS.txt"

    curbacks=`$sshcmd wc -l ${SSHDEST}/SHA256SUMS.txt | awk '{ print $1 }'`
    if [ $curbacks -gt $NUMBACKUPS ]; then
      delfile=`$sshcmd "head -n 1 $SSHDEST/SHA256SUMS.txt"`
      delfile=`echo $delfile | cut -d' ' -f2`
      echo Deleting: $delfile
      $sshcmd "rm ${SSHDEST}/${delfile}"
    fi
    $sshcmd "tail -n $NUMBACKUPS ${SSHDEST}/SHA256SUMS.txt > ${SSHDEST}/tmp.txt"
    $sshcmd "cat ${SSHDEST}/tmp.txt > ${SSHDEST}/SHA256SUMS.txt"
    $sshcmd "rm ${SSHDEST}/tmp.txt"
    echo Check Sum:
    $sshcmd "tail -n 1 ${SSHDEST}/SHA256SUMS.txt"
  fi
else
  if [ ${v} = "true" ]; then
    #echo new cron into cron file
    crontab -l > mycron
    if [ ${c} = "true" ]; then
      echo "30 2 * * * '${ttbloc}/tinytidybackup' -vc $NUMBACKUPS ${SRC} ${DEST}" >> mycron
    else
      echo "30 2 * * * '${ttbloc}/tinytidybackup' -v ${SRC} ${DEST}" >> mycron
    fi
    #install new cron file
    crontab mycron
    rm mycron
    tar -cvjf $DEST/${filename}.tar.bz2 ${SRC}
    sha256sum $DEST/${filename}.tar.bz2 >> $DEST/SHA256SUMS.txt
    curbacks=`wc -l $DEST/SHA256SUMS.txt | awk '{ print $1 }'`
    if [ $curbacks -gt $NUMBACKUPS ]; then
      delfile=`head -n 1 $DEST/SHA256SUMS.txt | awk '{print $2}'`
      echo Deleting: $delfile
      rm $delfile
    fi
    tail -n $NUMBACKUPS $DEST/SHA256SUMS.txt > $DEST/tmp.txt
    cat $DEST/tmp.txt > $DEST/SHA256SUMS.txt
    rm $DEST/tmp.txt
    echo Check Sum:
    tail -n 1 $DEST/SHA256SUMS.txt
  else
    #echo new cron into cron file
    crontab -l > mycron
    if [ $c = "true" ]; then
      echo "30 2 * * * '${ttbloc}/tinytidybackup' -c $NUMBACKUPS ${SRC} ${DEST}" >> mycron
      echo Keeping $NUMBACKUPS backups.
    else
      echo "30 2 * * * '${ttbloc}/tinytidybackup' ${SRC} ${DEST}" >> mycron
    fi
    #install new cron file
    crontab mycron
    rm mycron
    tar -cjf $DEST/${filename}.tar.bz2 ${SRC}
    sha256sum $DEST/${filename}.tar.bz2 >> $DEST/SHA256SUMS.txt
    curbacks=`wc -l $DEST/SHA256SUMS.txt | awk '{ print $1 }'`
    if [ $curbacks -gt $NUMBACKUPS ]; then
      delfile=`head -n 1 $DEST/SHA256SUMS.txt | awk '{print $2}'`
      echo Deleting: $delfile
      rm $delfile
    fi
    tail -n $NUMBACKUPS $DEST/SHA256SUMS.txt > $DEST/tmp.txt
    cat $DEST/tmp.txt > $DEST/SHA256SUMS.txt
    rm $DEST/tmp.txt
    echo Check Sum:
    tail -n 1 $DEST/SHA256SUMS.txt
  fi
fi
echo Job completed at: `date`


#write out current crontab
#crontab -l > mycron
#echo new cron into cron file
#echo "30 02 * * * commands" >> mycron
#install new cron file
#crontab mycron
#rm mycron
